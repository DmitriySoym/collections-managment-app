{% extends 'base.html.twig' %}

{% block title %}Item Collection{% endblock %}

{% block header %}
    <div class="d-flex justify-content-end gap-3">
        <a href="{{ path('app_category_info', {id: category.getId()}) }}" class="btn btn-success nav-btn">{{'collection.backToCollection'|trans}}</a>
    </div>
{% endblock %}

{% block body %}
    <div class="container pt-3 flex-auto">
        <h3>{{'itemCollection.collectionItemName'|trans({'%name%': itemCollection.name})}} </h3>

        <div class="category__form mt-4 mb-4">
                <div class="collection__title">
                    <h3>{{ itemCollection.name }}</h3>
                </div>
                {% if app.user %}
                    <div class="d-flex justify-content-center gap-3">
                        <a href="{{ path('app_collection_edit_item', {id: category.getId(), itemId: itemCollection.id}) }}" class="btn btn-success"><span class="btn-text">{{'collection.edit'|trans}}</span> <i class="fa-solid fa-pen-to-square"></i></a>
                        <a class="btn btn-danger collection__btn-delete" href="{{ path('app_collection_item_delete', {id: category.getId(), itemId: itemCollection.id}) }}"><span class="btn-text">{{'createCollection.deleteCollection'|trans}}</span> <i class="fa-solid fa-trash-can"></i></a>
                        <button class="btn btn-like">
                            {% if likeStatus %}
                                <i class="{{likeStatus.isStatus() ? 'fa-solid' : 'fa-regular'}} fa-heart" style="color:{{likeStatus.isStatus() ? '#dc3545' : 'unset'}}"></i>
                            {% else %}
                                <i class="fa-regular fa-heart" style="color:'unset'"></i>
                            {% endif %}
                            <span>{{likesCount|length}}</span>
                        </button>
                    </div>
                {% endif %}
            </div>

                <div class="custom-attribute">
                    <div class="custom-attribute_row">
                        {% for attribute in itemCollection.getItemAttributeStringFields %}
                            <span class="attribute-title">{{ attribute.getCustomItemAttribute.getName}}:</span>
                            <div class="attribute-content">{{ attribute.getValue }}</div>
                        {% endfor %}
                    </div>
                </div>

                <div class="custom-attribute">
                    <div class="custom-attribute_row">
                        {% for attribute in itemCollection.getItemAttributeTextFields %}
                            <span class="attribute-title">{{ attribute.getCustomItemAttribute.getName}}:</span>
                            <div class="attribute-content">{{ attribute.getValue }}</div>
                        {% endfor %}
                    </div>
                </div>
                <div class="custom-attribute">
                    <div class="custom-attribute_row">
                        {% for attribute in itemCollection.getItemAttributeIntegerFields %}
                            <span class="attribute-title">{{ attribute.getCustomItemAttribute.getName}}:</span>
                            <div class="attribute-content">{{ attribute.getValue }}</div>
                        {% endfor %}
                    </div>
                </div>
                <div class="custom-attribute">
                    <div class="custom-attribute_row">
                        {% for attribute in itemCollection.getItemAttributeBooleanFields %}
                            <span class="attribute-title">
                                {{ attribute.getCustomItemAttribute.getName}}
                            </span>
                            <div class="lead text-primary fs-4">
                                {% if attribute.isValue == 1  %}
                                    <i class="fa-solid fa-square-check"></i>
                                {% else %}
                                    <i class="fa-solid fa-minus"></i>
                                {% endif %}
                            </div>
                        {% endfor %}
                    </div>
                </div>
                <div class="custom-attribute">
                    <div class="custom-attribute_row">
                        {% for attribute in itemCollection.getItemAttributeDateFields %}
                            <span class="attribute-title">{{ attribute.getCustomItemAttribute.getName}}:</span>
                            <div class="attribute-content">{{ attribute.getValue|date("d.m.Y") }}</div>
                        {% endfor %}
                    </div>
                </div>

        <div class="comments">
            {% block comments %}
                {{ include('collection_item/comments/list.html.twig') }}
                {{ include('collection_item/comments/form.html.twig') }}
            {% endblock %}
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>
        const btnLike = document.querySelector('.btn-like');

        if(btnLike) {
            const btnLikeIcon = btnLike.querySelector('i');
            const likeAmount = btnLike.querySelector('span');

            btnLike.addEventListener('click', async function() {
                const itemId = {{itemCollection.id}};
                try {
                    btnLikeIcon.classList.add('loading');
                    const response = await fetch(`/api/like/item/${itemId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    if (data.liked === true) {
                            btnLikeIcon.classList.remove('fa-regular');
                            btnLikeIcon.classList.add('fa-solid');
                            btnLikeIcon.style.color = '#dc3545';
                            likeAmount.innerText = parseInt(likeAmount.textContent) + 1;
                            btnLikeIcon.classList.remove('loading');
                        } else {
                            btnLikeIcon.classList.remove('fa-solid');
                            btnLikeIcon.classList.add('fa-regular');
                            btnLikeIcon.style.color = 'unset';
                            likeAmount.innerText = parseInt(likeAmount.textContent) - 1;
                            btnLikeIcon.classList.remove('loading');
                        }
                } catch (error) {
                    console.log(error);
                    btnLikeIcon.classList.remove('loading');
                }
            })
        }

    </script>
{% endblock %}
